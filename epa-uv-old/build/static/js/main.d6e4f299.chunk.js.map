{"version":3,"sources":["index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","highcharts_react_official__WEBPACK_IMPORTED_MODULE_2__","highcharts_react_official__WEBPACK_IMPORTED_MODULE_2___default","highcharts__WEBPACK_IMPORTED_MODULE_3__","highcharts__WEBPACK_IMPORTED_MODULE_3___default","LineChart","_Date","_Date2","_userCity$split$2","paramZip","window","location","href","match","postalCode","setPostalCode","useState","zipcode","setZipcode","userCity","setUserCity","values","setValues","error","setError","cityError","setCityError","today","Date","toLocaleDateString","tomorrow","setDate","getDate","yesterday","time","toLocaleString","hour","setHour","getHours","minutes","setMinutes","getMinutes","todayAPI","toISOString","slice","replace","apiDate","setApiDate","cityName","setCityName","dataDate","setDataDate","isEditing","setEditing","exposure","boldNums","useEffect","handler","_ref","key","addEventListener","removeEventListener","setFormatDataValues","jsonData","filter","x","i","_jsonData","_jsonData2","UV_VALUE","map","DATE_TIME","useXY","async","coords","position","response","fetch","concat","latitude","longitude","json","console","log","city","state","CITY","STATE","split","message","y","getValues","arguments","length","undefined","getCityValues","splitCity","trim","inputRef","useRef","inputRefCity","interval","setInterval","clearInterval","current","focus","value","Object","fromEntries","document","title","updateTitle","useMemo","zeroPad","num","places","String","padStart","formatTime","chartOptions","style","color","chart","type","backgroundColor","text","subtitle","getDay","weekday","year","month","day","series","name","data","dataLabels","enabled","padding","fontSize","zones","shadow","credits","tooltip","crosshairs","snap","zIndex","followPointer","formatter","this","points","reduce","s","point","shared","borderRadius","xAxis","gridLineWidth","gridZIndex","plotLines","width","label","parse","toLocaleTimeString","Math","round","textAlign","verticalAlign","transform","rotation","tickInterval","dateTimeLabelFormats","main","labels","axis","defaultLabelFormatter","call","dashStyle","yAxis","allowDecimals","max","React","createElement","HighchartsReact","containerProps","height","highcharts","Highcharts","options","display","justifyContent","marginTop","htmlFor","pattern","maxLength","ref","onChange","e","target","_userCity$split$","marginRight","lineHeight","opacity","onClick","preventDefault","disabled","navigator","geolocation","getCurrentPosition","render","getElementById"],"mappings":"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","file":"static/js/main.d6e4f299.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport { render } from 'react-dom';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport './style.css';\n\nlet x, y;\nconst LineChart = () => {\n  const paramZip =\n    window.location.href.match(/\\d{5}/) &&\n    window.location.href.match(/\\d{5}/)[0];\n\n  const [postalCode, setPostalCode] = useState(paramZip || '95377');\n\n  const [zipcode, setZipcode] = useState(paramZip || '94108');\n  const [userCity, setUserCity] = useState('San Francisco, CA');\n  const [values, setValues] = useState([]);\n  const [error, setError] = useState(false);\n  const [cityError, setCityError] = useState(false);\n  const today = new Date(new Date().toLocaleDateString());\n  const tomorrow = new Date(\n    new Date().setDate(new Date().getDate() + 1)\n  ).toLocaleDateString();\n  const yesterday = new Date(\n    new Date().setDate(new Date().getDate() - 1)\n  ).toLocaleDateString();\n  const time = new Date(new Date().toLocaleString());\n  const [hour, setHour] = useState(time.getHours());\n  const [minutes, setMinutes] = useState(time.getMinutes());\n  const todayString = today.toISOString().slice(0, 10);\n  const todayAPI = todayString.replace(/-/g, '');\n  const yesterdayAPI = new Date(yesterday)\n    .toISOString()\n    .slice(0, 10)\n    .replace(/-/g, '');\n  const tomorrowAPI = new Date(tomorrow)\n    .toISOString()\n    .slice(0, 10)\n    .replace(/-/g, '');\n  const [apiDate, setApiDate] = useState(todayAPI);\n  // const [isFetched, setIsFetched] = useState(false);\n  const [cityName, setCityName] = useState('city, state');\n  const [dataDate, setDataDate] = useState(today);\n  const [isEditing, setEditing] = useState(false);\n  const toggleEditing = () => {\n    setZipcode('');\n    setUserCity('');\n    setEditing(!isEditing);\n    setError(false);\n  };\n\n  const toggleCityEditing = () => {\n    setUserCity('');\n    setZipcode('');\n    setEditing(!isEditing);\n    setCityError(false);\n  };\n\n  const exposure = [\n    'low',\n    'low',\n    'low',\n    'moderate',\n    'moderate',\n    'moderate',\n    'high',\n    'high',\n    'very high',\n    'very high',\n    'very high',\n    'extreme',\n    'extreme',\n    'extreme',\n    'extreme',\n    'extreme',\n  ];\n\n  const emojiNums = [\n    '0️⃣',\n    '1️⃣',\n    '2️⃣',\n    '3️⃣',\n    '4️⃣',\n    '5️⃣',\n    '6️⃣',\n    '7️⃣',\n    '8️⃣',\n    '9️⃣',\n    '🔟',\n    '1️⃣1️⃣',\n    '1️⃣2️⃣',\n    '1️⃣3️⃣',\n    '1️⃣4️⃣',\n    '1️⃣5️⃣',\n  ];\n\n  const boldNums = [\n    '𝟎',\n    '𝟏',\n    '𝟐',\n    '𝟑',\n    '𝟒',\n    '𝟓',\n    '𝟔',\n    '𝟕',\n    '𝟖',\n    '𝟗',\n    '𝟏𝟎',\n    '𝟏𝟏',\n    '𝟏𝟐',\n    '𝟏𝟑',\n    '𝟏𝟒',\n    '𝟏𝟓',\n  ];\n\n  const doubleNums = [\n    '𝟘',\n    '𝟙',\n    '𝟚',\n    '𝟛',\n    '𝟜',\n    '𝟝',\n    '𝟞',\n    '𝟟',\n    '𝟠',\n    '𝟡',\n    '𝟘',\n    '𝟙𝟙',\n    '𝟙𝟚',\n    '𝟙𝟛',\n    '𝟙𝟜',\n    '𝟙𝟝',\n  ];\n\n  const sansNums = [\n    '𝟢',\n    '𝟣',\n    '𝟤',\n    '𝟥',\n    '𝟦',\n    '𝟧',\n    '𝟨',\n    '𝟩',\n    '𝟪',\n    '𝟫',\n    '𝟣𝟢',\n    '𝟣𝟣',\n    '𝟣𝟤',\n    '𝟣𝟥',\n    '𝟣𝟦',\n    '𝟣𝟧',\n  ];\n\n  const dateOptions = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  const getExposure = (index) => exposure[index];\n\n  const updateTitle = (values) => {\n    const value = Object.fromEntries(values)[hour] || '0';\n    document.title = `🌻 UV Index: ${boldNums[value]} ${exposure[value]}`;\n    console.log({ values });\n  };\n\n  useEffect(() => {\n    const handler = ({ key }) => key === 'Escape' && toggleEditing();\n    window.addEventListener('keydown', handler);\n    return () => {\n      // This is the cleanup function\n      window.removeEventListener('keydown', handler);\n    };\n  }, []);\n\n  const setFormatDataValues = (jsonData) => {\n    setValues(\n      jsonData\n        ?.filter(\n          (x, i) =>\n            x.UV_VALUE != 0 ||\n            jsonData[i - 1]?.UV_VALUE > 0 ||\n            jsonData[i + 1]?.UV_VALUE > 0\n        )\n        .map((x) => [\n          new Date(\n            x.DATE_TIME.replace(/ AM/, ':00 am').replace(/ PM/, ':00 pm')\n          ).getHours(),\n          x.UV_VALUE,\n        ])\n    );\n  };\n\n  const getXY = () => {\n    const error = (error) => console.error(error.message);\n    navigator.geolocation.getCurrentPosition(useXY, error);\n  };\n\n  const useXY = async (position) => {\n    const coords = position.coords;\n    try {\n      const response = await fetch(\n        `https://data.epa.gov/efservice/getEnvirofactsUVHourly/LATITUDE/${coords.latitude}/LONGITUDE/${coords.longitude}/JSON`\n      );\n      const jsonData = await response.json();\n      console.log(jsonData);\n      setFormatDataValues(jsonData);\n      console.log(jsonData);\n      console.log(values);\n      const [city, state] = [jsonData[0].CITY, jsonData[0].STATE];\n      setCityName(`${city}, ${state}`);\n      setDataDate(new Date(jsonData[0].DATE_TIME.split(' ')[0]));\n      setError(false);\n      setZipcode('');\n    } catch (error) {\n      console.error(error.message);\n      console.error(x, y, 'is not found!');\n    }\n  };\n\n  const getValues = async (apiDate = todayAPI) => {\n    if (zipcode.length === 5) {\n      try {\n        const response = await fetch(\n          `https://data.epa.gov/efservice/getEnvirofactsUVHourly/ZIP/${zipcode}/JSON`\n        );\n        const jsonData = await response.json();\n        setFormatDataValues(jsonData);\n        console.log(jsonData);\n        console.log(values);\n        const [city, state] = [jsonData[0].CITY, jsonData[0].STATE];\n        setCityName(`${city}, ${state}`);\n        setDataDate(new Date(jsonData[0].DATE_TIME.split(' ')[0]));\n        setError(false);\n      } catch (error) {\n        console.error(error.message);\n        console.error(zipcode, 'is not found!');\n        setError(true);\n      }\n    }\n  };\n\n  const getCityValues = async () => {\n    if (!!userCity.match(/[a-z+], *[A-Z]{2}/i)) {\n      const splitCity = userCity.trim().split(/\\s*,/);\n      try {\n        const response = await fetch(\n          `https://data.epa.gov/efservice/getEnvirofactsUVHourly/CITY/${splitCity[0].trim()}/STATE/${splitCity[1].trim()}/JSON`\n        );\n        const jsonData = await response.json();\n        setFormatDataValues(jsonData);\n        console.log(jsonData);\n        console.log(values);\n        const [city, state] = [jsonData[0].CITY, jsonData[0].STATE];\n        setCityName(`${city}, ${state}`);\n        setDataDate(new Date(jsonData[0].DATE_TIME.split(' ')[0]));\n        setCityError(false);\n        setZipcode('');\n      } catch (error) {\n        console.error(error.message);\n        console.error(userCity, 'is not found!');\n        setError(true);\n      }\n    }\n  };\n\n  const inputRef = useRef(null);\n  const inputRefCity = useRef(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let date = new Date();\n      setMinutes(new Date(new Date().toLocaleString()).getMinutes());\n      setHour(new Date(new Date().toLocaleString()).getHours());\n    }, 20000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (zipcode.length < 5) {\n      inputRef.current.focus();\n      setError(false);\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    if (userCity.length < 3) {\n      inputRefCity.current.focus();\n      setError(false);\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    updateTitle(values);\n  }, [hour, values, zipcode]);\n\n  useMemo(() => {\n    getValues(apiDate);\n  }, [zipcode]);\n\n  const zeroPad = (num, places) => String(num).padStart(places, '0');\n  const formatTime = (num) => {\n    if (num == 0 || num == 24) {\n      return '12 am';\n    } else if (num > 0 && num < 12) {\n      return `${num} am`;\n    } else if (num == 12) {\n      return `12 pm`;\n    } else if (num > 12 && num < 24) {\n      return `${num - 12} pm`;\n    } else {\n      return num;\n    }\n  };\n\n  const colors = [\n    {\n      value: 1,\n      color: '#4eb600',\n    },\n    {\n      value: 2,\n      color: '#4eb600',\n    },\n    {\n      value: 3,\n      color: '#99cc02',\n    },\n    {\n      value: 4,\n      color: '#f8e200',\n    },\n    {\n      value: 5,\n      color: '#f7b501ff',\n    },\n    {\n      value: 6,\n      color: '#f88600ee',\n    },\n    {\n      value: 7,\n      color: '#f95900cc',\n    },\n    {\n      value: 8,\n      color: '#e82a0eaa',\n    },\n    {\n      value: 9,\n      color: '#d7031a99',\n    },\n    {\n      value: 10,\n      color: '#ff029888',\n    },\n    {\n      value: 11,\n      color: '#b449ff',\n    },\n    {\n      value: 12,\n      color: '#9a8aff',\n    },\n    {\n      value: 13,\n      color: '#9a8aff',\n    },\n    {\n      value: 14,\n      color: '#9a8aff',\n    },\n    {\n      color: '#9a8aff',\n    },\n  ];\n\n  const changeDate = (api) => {\n    setApiDate(api);\n    getValues(api);\n  };\n  const chartOptions = {\n    style: {\n      color: '#ddd',\n    },\n    chart: {\n      type: 'spline',\n      // backgroundColor: '#131313',\n      backgroundColor: '#eee0',\n    },\n    title: {\n      text: `UV Index for <span style=\"opacity: ${\n        0.5 + zipcode.length / 10\n      }; fill: ${error && '#e82a0eaa'}; font-style: ${\n        error && 'italic'\n      }\">${zipcode}</span><span> ${cityName}</span>`,\n    },\n    subtitle: {\n      text: `\n      ${\n        today.getDay() === new Date(dataDate)?.getDay() ? 'Today' : 'Tomorrow'\n      }: ${new Date(dataDate)?.toLocaleDateString('US-en', dateOptions)}`,\n    },\n    series: [\n      {\n        name: cityName,\n        data: values,\n        style: {\n          // color: '#ddd',\n        },\n        // lineWidth: '3',\n        dataLabels: {\n          enabled: true,\n          padding: 7,\n          color: '#555',\n          style: {\n            fontSize: '1rem',\n          },\n        },\n        zones: colors,\n        shadow: true,\n      },\n    ],\n    credits: {\n      enabled: false,\n    },\n    tooltip: {\n      crosshairs: true,\n      crosshairs: {\n        snap: false,\n        zIndex: 1,\n      },\n      followPointer: true,\n      formatter: function () {\n        return this.points.reduce(function (s, point) {\n          return (\n            s +\n            '<br/>' +\n            point.y +\n            ': <strong>' +\n            exposure[point.y] +\n            '</strong>'\n          );\n        }, formatTime(this.x));\n      },\n      shared: true,\n      borderRadius: 22,\n    },\n    xAxis: {\n      // categories: values.map((x) =>\n      //   x[0].slice(5).replace(/^0/, '').replace(/\\s/, ' ').toLowerCase()\n      // ),\n      gridLineWidth: 1,\n      gridZIndex: 0,\n      plotLines: [\n        {\n          zIndex: 2,\n          color: 'cornflowerblue',\n          width: 2,\n          value: hour + minutes / 60,\n          label: {\n            text: `${new Date(\n              Date.parse(`0000-01-01 ${zeroPad(hour)}:${zeroPad(minutes)}`)\n            )\n              .toLocaleTimeString()\n              .replace(/:00 AM/, ' am')\n              .replace(/:00 PM/, ' pm')}, <strong>${\n              exposure[\n                {\n                  ...values.filter(\n                    (x) => x[0] === Math.round(hour + minutes / 60)\n                  )[0],\n                }[1]\n              ]\n            }</strong>`,\n            textAlign: `${hour < 13 ? 'left' : 'right'}`,\n            verticalAlign: 'top',\n            fontSize: 12,\n            style: {\n              fontSize: '1rem',\n              transform: `translate(${\n                hour < 13 ? '.25rem' : '-.9rem'\n              }, 1.2rem)`,\n              color: '#333',\n            },\n            rotation: 0,\n          },\n        },\n      ],\n      tickInterval: 1,\n      dateTimeLabelFormats: {\n        hour: {\n          main: '%l',\n        },\n      },\n      labels: {\n        formatter() {\n          // eslint-disable-next-line react/no-this-in-sfc\n          const label = this.axis.defaultLabelFormatter.call(this);\n          return formatTime(label);\n        },\n        style: {\n          // color: '#ddd',\n        },\n      },\n      crosshairs: {\n        snap: false,\n        color: 'gray',\n        dashStyle: 'shortdot',\n        width: 1,\n      },\n    },\n    yAxis: {\n      allowDecimals: false,\n      title: '',\n      max: 12,\n      gridZIndex: -1,\n      labels: {\n        style: {\n          // color: '#ddd',\n        },\n      },\n    },\n    // plotOptions: {\n    //   series: {\n    //     point: {\n    //       events: {\n    //         mouseOver(e) {\n    //           setHoverData(e.target.category);\n    //         },\n    //       },\n    //     },\n    //   },\n    // },\n  };\n\n  return (\n    <div>\n      <HighchartsReact\n        containerProps={{\n          style: {\n            height: 'calc(100vh - 9em)',\n            width: 'calc(100vw - 2em)',\n            position: 'fixed',\n            backgroundColor: '#eee0',\n          },\n        }}\n        highcharts={Highcharts}\n        options={chartOptions}\n      />\n      {/* <h3>Hovering over {hoverData}</h3> */}\n      <div style={{ padding: 'calc(100vh - 9.25em) 1em 1em', zIndex: '-5' }}>\n        <form\n          style={{\n            backgroundColor: '#fff0',\n            display: 'flex',\n            justifyContent: 'flex-start',\n          }}\n        ></form>\n\n        <form\n          style={{\n            marginTop: '1em',\n            backgroundColor: '#fff0',\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <label htmlFor=\"zipcode\">\n            Zipcode:\n            <input\n              style={{ width: '4em' }}\n              type=\"tel\"\n              pattern=\"^\\d*$\"\n              name=\"zipcode\"\n              value={zipcode}\n              maxLength=\"5\"\n              ref={inputRef}\n              onChange={(e) => {\n                zipcode.length === 5 && getValues(apiDate);\n                setZipcode(e.target.value.replace(/\\D/, '').slice(0, 5));\n              }}\n            />\n          </label>\n          <label htmlFor=\"city\">\n            City, State:\n            <input\n              style={{ width: '10em' }}\n              type=\"text\"\n              pattern=\"^[a-z], *[A-Z]{2}*$\"\n              name=\"city\"\n              value={userCity}\n              ref={inputRefCity}\n              onChange={(e) => {\n                setUserCity(e.target.value.replace(/\\d/, ''));\n                userCity.length > 3 &&\n                  userCity?.split(/\\, */)[1]?.length === 2 &&\n                  getCityValues();\n              }}\n            />\n            <button\n              style={{ marginRight: '1em', lineHeight: 1.2, opacity: 0.7 }}\n              onClick={(e) => {\n                getCityValues();\n                e.preventDefault();\n              }}\n              disabled={userCity?.split(/\\, */)[1]?.length !== 2}\n            >\n              🔍\n            </button>\n            <button\n              style={{ marginRight: '1em' }}\n              onClick={(e) => {\n                e.preventDefault();\n                toggleCityEditing();\n              }}\n            >\n              clear\n            </button>\n          </label>\n          <button\n            onClick={(e) => {\n              // useXY();\n              getXY();\n              getValues(apiDate);\n              e.preventDefault();\n              // console.log(x, y, 'aaaaa');\n            }}\n          >\n            use my location\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nrender(<LineChart />, document.getElementById('root'));\n"],"sourceRoot":""}